/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package mx.com.cuervo.rutas.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

import mx.com.cuervo.rutas.model.Usuario;
import mx.com.cuervo.rutas.model.UsuarioModel;
import mx.com.cuervo.rutas.model.UsuarioSoap;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model implementation for the Usuario service. Represents a row in the &quot;C_Usuario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>UsuarioModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsuarioImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UsuarioImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class UsuarioModelImpl
	extends BaseModelImpl<Usuario> implements UsuarioModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a usuario model instance should use the <code>Usuario</code> interface instead.
	 */
	public static final String TABLE_NAME = "C_Usuario";

	public static final Object[][] TABLE_COLUMNS = {
		{"usuarioId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"empleadoId", Types.BIGINT},
		{"telefono", Types.VARCHAR}, {"rutaId", Types.BIGINT},
		{"paradaId", Types.BIGINT}, {"fecha", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("usuarioId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("empleadoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("telefono", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rutaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("paradaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fecha", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table C_Usuario (usuarioId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,empleadoId LONG,telefono VARCHAR(75) null,rutaId LONG,paradaId LONG,fecha DATE null)";

	public static final String TABLE_SQL_DROP = "drop table C_Usuario";

	public static final String ORDER_BY_JPQL =
		" ORDER BY usuario.usuarioId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY C_Usuario.usuarioId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long GROUPID_COLUMN_BITMASK = 1L;

	public static final long RUTAID_COLUMN_BITMASK = 2L;

	public static final long USUARIOID_COLUMN_BITMASK = 4L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Usuario toModel(UsuarioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Usuario model = new UsuarioImpl();

		model.setUsuarioId(soapModel.getUsuarioId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setEmpleadoId(soapModel.getEmpleadoId());
		model.setTelefono(soapModel.getTelefono());
		model.setRutaId(soapModel.getRutaId());
		model.setParadaId(soapModel.getParadaId());
		model.setFecha(soapModel.getFecha());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Usuario> toModels(UsuarioSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Usuario> models = new ArrayList<Usuario>(soapModels.length);

		for (UsuarioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public UsuarioModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _usuarioId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setUsuarioId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _usuarioId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Usuario.class;
	}

	@Override
	public String getModelClassName() {
		return Usuario.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Usuario, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Usuario, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Usuario, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Usuario)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Usuario, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Usuario, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Usuario)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Usuario, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Usuario, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Usuario>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Usuario.class.getClassLoader(), Usuario.class, ModelWrapper.class);

		try {
			Constructor<Usuario> constructor =
				(Constructor<Usuario>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<Usuario, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Usuario, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Usuario, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Usuario, Object>>();
		Map<String, BiConsumer<Usuario, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Usuario, ?>>();

		attributeGetterFunctions.put("usuarioId", Usuario::getUsuarioId);
		attributeSetterBiConsumers.put(
			"usuarioId", (BiConsumer<Usuario, Long>)Usuario::setUsuarioId);
		attributeGetterFunctions.put("groupId", Usuario::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<Usuario, Long>)Usuario::setGroupId);
		attributeGetterFunctions.put("companyId", Usuario::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId", (BiConsumer<Usuario, Long>)Usuario::setCompanyId);
		attributeGetterFunctions.put("userId", Usuario::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<Usuario, Long>)Usuario::setUserId);
		attributeGetterFunctions.put("userName", Usuario::getUserName);
		attributeSetterBiConsumers.put(
			"userName", (BiConsumer<Usuario, String>)Usuario::setUserName);
		attributeGetterFunctions.put("createDate", Usuario::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate", (BiConsumer<Usuario, Date>)Usuario::setCreateDate);
		attributeGetterFunctions.put("modifiedDate", Usuario::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<Usuario, Date>)Usuario::setModifiedDate);
		attributeGetterFunctions.put("empleadoId", Usuario::getEmpleadoId);
		attributeSetterBiConsumers.put(
			"empleadoId", (BiConsumer<Usuario, Long>)Usuario::setEmpleadoId);
		attributeGetterFunctions.put("telefono", Usuario::getTelefono);
		attributeSetterBiConsumers.put(
			"telefono", (BiConsumer<Usuario, String>)Usuario::setTelefono);
		attributeGetterFunctions.put("rutaId", Usuario::getRutaId);
		attributeSetterBiConsumers.put(
			"rutaId", (BiConsumer<Usuario, Long>)Usuario::setRutaId);
		attributeGetterFunctions.put("paradaId", Usuario::getParadaId);
		attributeSetterBiConsumers.put(
			"paradaId", (BiConsumer<Usuario, Long>)Usuario::setParadaId);
		attributeGetterFunctions.put("fecha", Usuario::getFecha);
		attributeSetterBiConsumers.put(
			"fecha", (BiConsumer<Usuario, Date>)Usuario::setFecha);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getUsuarioId() {
		return _usuarioId;
	}

	@Override
	public void setUsuarioId(long usuarioId) {
		_usuarioId = usuarioId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getEmpleadoId() {
		return _empleadoId;
	}

	@Override
	public void setEmpleadoId(long empleadoId) {
		_empleadoId = empleadoId;
	}

	@JSON
	@Override
	public String getTelefono() {
		if (_telefono == null) {
			return "";
		}
		else {
			return _telefono;
		}
	}

	@Override
	public void setTelefono(String telefono) {
		_telefono = telefono;
	}

	@JSON
	@Override
	public long getRutaId() {
		return _rutaId;
	}

	@Override
	public void setRutaId(long rutaId) {
		_columnBitmask |= RUTAID_COLUMN_BITMASK;

		if (!_setOriginalRutaId) {
			_setOriginalRutaId = true;

			_originalRutaId = _rutaId;
		}

		_rutaId = rutaId;
	}

	public long getOriginalRutaId() {
		return _originalRutaId;
	}

	@JSON
	@Override
	public long getParadaId() {
		return _paradaId;
	}

	@Override
	public void setParadaId(long paradaId) {
		_paradaId = paradaId;
	}

	@JSON
	@Override
	public Date getFecha() {
		return _fecha;
	}

	@Override
	public void setFecha(Date fecha) {
		_fecha = fecha;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Usuario.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Usuario toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Usuario>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsuarioImpl usuarioImpl = new UsuarioImpl();

		usuarioImpl.setUsuarioId(getUsuarioId());
		usuarioImpl.setGroupId(getGroupId());
		usuarioImpl.setCompanyId(getCompanyId());
		usuarioImpl.setUserId(getUserId());
		usuarioImpl.setUserName(getUserName());
		usuarioImpl.setCreateDate(getCreateDate());
		usuarioImpl.setModifiedDate(getModifiedDate());
		usuarioImpl.setEmpleadoId(getEmpleadoId());
		usuarioImpl.setTelefono(getTelefono());
		usuarioImpl.setRutaId(getRutaId());
		usuarioImpl.setParadaId(getParadaId());
		usuarioImpl.setFecha(getFecha());

		usuarioImpl.resetOriginalValues();

		return usuarioImpl;
	}

	@Override
	public int compareTo(Usuario usuario) {
		long primaryKey = usuario.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Usuario)) {
			return false;
		}

		Usuario usuario = (Usuario)obj;

		long primaryKey = usuario.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		UsuarioModelImpl usuarioModelImpl = this;

		usuarioModelImpl._originalGroupId = usuarioModelImpl._groupId;

		usuarioModelImpl._setOriginalGroupId = false;

		usuarioModelImpl._setModifiedDate = false;

		usuarioModelImpl._originalRutaId = usuarioModelImpl._rutaId;

		usuarioModelImpl._setOriginalRutaId = false;

		usuarioModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Usuario> toCacheModel() {
		UsuarioCacheModel usuarioCacheModel = new UsuarioCacheModel();

		usuarioCacheModel.usuarioId = getUsuarioId();

		usuarioCacheModel.groupId = getGroupId();

		usuarioCacheModel.companyId = getCompanyId();

		usuarioCacheModel.userId = getUserId();

		usuarioCacheModel.userName = getUserName();

		String userName = usuarioCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			usuarioCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			usuarioCacheModel.createDate = createDate.getTime();
		}
		else {
			usuarioCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			usuarioCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			usuarioCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		usuarioCacheModel.empleadoId = getEmpleadoId();

		usuarioCacheModel.telefono = getTelefono();

		String telefono = usuarioCacheModel.telefono;

		if ((telefono != null) && (telefono.length() == 0)) {
			usuarioCacheModel.telefono = null;
		}

		usuarioCacheModel.rutaId = getRutaId();

		usuarioCacheModel.paradaId = getParadaId();

		Date fecha = getFecha();

		if (fecha != null) {
			usuarioCacheModel.fecha = fecha.getTime();
		}
		else {
			usuarioCacheModel.fecha = Long.MIN_VALUE;
		}

		return usuarioCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Usuario, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Usuario, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Usuario, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((Usuario)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Usuario, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Usuario, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Usuario, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Usuario)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Usuario>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private long _usuarioId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _empleadoId;
	private String _telefono;
	private long _rutaId;
	private long _originalRutaId;
	private boolean _setOriginalRutaId;
	private long _paradaId;
	private Date _fecha;
	private long _columnBitmask;
	private Usuario _escapedModel;

}